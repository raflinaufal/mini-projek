<?php

if (!defined('BASEPATH'))
	exit('No direct script access allowed');

class Users_model extends CI_Model
{

	public $table = 'users';
	public $id = 'id';
	public $order = 'DESC';

	function __construct()
	{
		parent::__construct();
	}
	// Ambil semua pengguna
	public function get_all_users()
	{
		return $this->db->get('users')->result_array();
	}

	// Ambil data pengguna berdasarkan ID


	// Ambil pengguna berdasarkan email untuk login
	public function get_user_by_email($email)
	{
		return $this->db->get_where('users', ['email' => $email])->row_array();
	}

	public function get_user($id)
	{
		return $this->db->get_where('users', ['id' => $id])->row_array();
	}

	// get all
	function get_all()
	{
		$this->db->order_by($this->id, $this->order);
		return $this->db->get($this->table)->result();
	}

	// get data by id
	function get_by_id($id)
	{
		$this->db->where($this->id, $id);
		return $this->db->get($this->table)->row();
	}

	// get total rows
	function total_rows($q = NULL)
	{
		$this->db->like('id', $q);
		$this->db->or_like('name', $q);
		$this->db->or_like('email', $q);
		$this->db->or_like('password', $q);
		$this->db->or_like('role', $q);
		$this->db->or_like('created_at', $q);
		$this->db->from($this->table);
		return $this->db->count_all_results();
	}

	// get data with limit and search
	function get_limit_data($limit, $start = 0, $q = NULL)
	{
		$this->db->order_by($this->id, $this->order);
		$this->db->like('id', $q);
		$this->db->or_like('name', $q);
		$this->db->or_like('email', $q);
		$this->db->or_like('password', $q);
		$this->db->or_like('role', $q);
		$this->db->or_like('created_at', $q);
		$this->db->limit($limit, $start);
		return $this->db->get($this->table)->result();
	}

	// insert data
	function insert($data)
	{
		$this->db->insert($this->table, $data);
	}

	// update data
	function update($id, $data)
	{
		$this->db->where($this->id, $id);
		$this->db->update($this->table, $data);
	}

	// delete data
	function delete($id)
	{
		$this->db->where($this->id, $id);
		$this->db->delete($this->table);
	}

	public function is_email_exists($email)
	{
		$this->db->where('email', $email);
		$query = $this->db->get('users');
		return $query->num_rows() > 0;
	}

	public function insert_data($data)
	{
		$this->db->insert('users', $data);
		return $this->db->insert_id(); // Mengembalikan ID dari data yang baru saja diinsert
	}




	public function update_data($id, $data)
	{
		$this->db->where('id', $id);
		$this->db->update('users', $data);
		return $this->db->affected_rows() > 0; // Return true jika ada perubahan data
	}

	public function delete_data($id)
	{
		$this->db->where('id', $id);
		$this->db->delete('users');
		return $this->db->affected_rows() > 0; // Return true jika ada perubahan data
	}


	public function is_email_exists_except_self($email, $id)
	{
		$this->db->where('email', $email);
		$this->db->where('id !=', $id); // Cek selain ID yang sedang diupdate
		$query = $this->db->get('users');
		return $query->num_rows() > 0;
	}




	// Fungsi untuk mengecek apakah ID pengguna ada
	public function get_user_by_id($id)
	{
		$this->db->where('id', $id);
		$query = $this->db->get('users');
		return $query->row_array(); // Return data pengguna jika ditemukan
	}
}

/* End of file Users_model.php */
/* Location: ./application/models/Users_model.php */
/* Please DO NOT modify this information : */
/* Generated by Harviacode Codeigniter CRUD Generator 2024-11-21 16:12:48 */
/* http://harviacode.com */
